#! C:/Program Files/Nuke12.1v3/nuke-12.1.3.dll -nx
#write_info Write1 file:"../render.png" format:"575 464 1" chans:":rgba.red:rgba.green:rgba.blue:" framerange:"1001 1100" fps:"0" colorspace:"default (sRGB)" datatype:"8 bit" transfer:"unknown" views:"main" colorManagement:"Nuke"
version 12.1 v3
define_window_layout_xml {<?xml version="1.0" encoding="UTF-8"?>
<layout version="1.0">
    <window x="0" y="0" w="1200" h="696" screen="0">
        <splitter orientation="1">
            <split size="40"/>
            <dock id="" hideTitles="1" activePageId="Toolbar.1">
                <page id="Toolbar.1"/>
            </dock>
            <split size="212" stretch="1"/>
            <splitter orientation="2">
                <split size="336"/>
                <dock id="" activePageId="Viewer.1">
                    <page id="Viewer.1"/>
                </dock>
                <split size="318"/>
                <dock id="" activePageId="DAG.1">
                    <page id="DAG.1"/>
                    <page id="DopeSheet.1"/>
                    <page id="DAG.2"/>
                </dock>
            </splitter>
            <split size="322"/>
            <dock id="" activePageId="Properties.1">
                <page id="Properties.1"/>
                <page id="uk.co.thefoundry.backgroundrenderview.1"/>
                <page id="uk.co.thefoundry.scripteditor.1"/>
            </dock>
            <split size="614"/>
            <dock id="" activePageId="uk.co.thefoundry.scripteditor.2" focus="true">
                <page id="uk.co.thefoundry.scripteditor.2"/>
            </dock>
        </splitter>
    </window>
</layout>
}
Root {
 inputs 0
 name D:/movie_1/chase/test/comp/test_v010.nk
 project_directory "\[python \{nuke.script_directory()\}]"
 first_frame 1001
 last_frame 1100
 format "2048 1556 0 0 2048 1556 1 2K_Super_35(full-ap)"
 proxy_type scale
 proxy_format "1024 778 0 0 1024 778 1 1K_Super_35(full-ap)"
 colorManagement Nuke
 workingSpaceLUT linear
 monitorLut sRGB
 int8Lut sRGB
 int16Lut sRGB
 logLut Cineon
 floatLut linear
}
Read {
 inputs 0
 file_type exr
 file "C:/Users/it/Downloads/Telegram Desktop/test_render.exr"
 format "1280 720 0 0 1280 720 1 HD_720"
 origset true
 name Read1
 xpos -9
 ypos -329
}
Group {
 name Group1
 xpos -9
 ypos -167
 postage_stamp true
 addUserKnob {20 User}
 addUserKnob {26 ""}
 addUserKnob {22 clean l "    clean    " t "This will remove all passes checkbox generated by the \"generate button\".\nIf you would like to refresh, clean it first and generate again." -STARTLINE T "x = nuke.thisNode()\nknobs = x.knobs()\n\nfor knobname, knob in x.knobs().items():\n    if type(knob) == nuke.Boolean_Knob:\n        if knobname.endswith('_aov'):\n            x.removeKnob(knob)"}
 addUserKnob {22 generate_passes l "    generate_passes    " t "This will list down all passes available from incoming exr file. after it list down the passes, pick the ones you like to shuffle out." -STARTLINE T "n = nuke.thisNode()\nlayers = n.input(0).channels()\nmylayers = \[]\n\nfor x in layers: \n    cc = x.split('.') \n    ce = cc\[0] + '_aov' \n    mylayers.append(ce) \nmylayers = set(mylayers)\nmylayers = list(mylayers)\nmylayers.sort()\n\nfor layer in mylayers:\n    c = nuke.thisNode()\n    checkbox = nuke.Boolean_Knob(layer,layer)\n    checkbox.setFlag(nuke.STARTLINE)\n    c.addKnob(checkbox)\n"}
 addUserKnob {22 shuffle_out l "    shuffle_out    " t "This will create shuffle node for all selected passes, and add proper naming to each shuffle nodes." -STARTLINE T "x = nuke.thisNode()\nknobs = x.knobs()\n\nfor knobname, knob in knobs.items():\n    if type(knob) == nuke.Boolean_Knob and knobname.endswith('_aov'):\n        value = knob.getValue()\n        if value == True:\n            target_layer = knobname\[:-4] \n            nuke.root().begin() \n            shuff = nuke.nodes.Shuffle()\n            shuff.setInput(0,x) \n            shuff.knob('in').setValue(target_layer) #target the layer name)\n            shuff.knob('postage_stamp').setValue(1) \n            shuff.setName('Shuffle_' + target_layer)\n            nuke.root().end() "}
 addUserKnob {26 ""}
}
 Input {
  inputs 0
  name Input1
  xpos 0
 }
 Output {
  name Output1
  xpos 0
  ypos 300
 }
end_group
Read {
 inputs 0
 file_type jpeg
 file ../imgs/photo.jpg
 format "1280 720 0 0 1280 720 1 HD_720"
 origset true
 version 2
 name Read2
 xpos 183
 ypos -327
}
set Nd868b800 [stack 0]
Write {
 file ../render.png
 file_type png
 create_directories true
 checkHashOnRead false
 version 4
 name Write1
 xpos 183
 ypos -165
}
push $Nd868b800
Viewer {
 frame_range 1001-1100
 name Viewer1
 xpos -233
 ypos -143
}
Group {
 inputs 0
 name PROJ
 tile_color 0x5379d1ff
 gl_color 0x822323ff
 label Create
 note_font_size 20
 note_font_color 0xeaeaeaff
 xpos 479
 ypos -342
 addUserKnob {20 MyProject}
 addUserKnob {22 save_proj l "    save_project    " t "This will set the folder structure, project directory and save the project file." T "import random\n\n'''\nsince different OS has different slash and backslash use\ncan be useful for later use, currently not.\n'''\n\nwd = ':/' #wd is short for windows drive\nwp = '/'  #wp is short for windows path\n\n# get info from knobs\nmine = nuke.thisNode()\ngDrv = mine.knob(\"Drive\").value()\ngProj = mine.knob(\"proj\").value()\ngSeq = mine.knob(\"seq\").value()\ngShot = mine.knob(\"shot\").value()\ngVer = int(mine.knob(\"ver\").value())\ngVer = format(gVer, \"03\")\ngFFrame = mine.knob(\"FFrame\").value()\ngLFrame = mine.knob(\"LFrame\").value()\n\n# set folder structure, project setting and project file\npath = gDrv + wd + gProj + wp + gSeq + wp + gShot + wp + 'comp/'\nname = gShot + '_v' + str(gVer) + '.nk'\nnuke.scriptSaveAs(path + name)\nnuke.root()\['project_directory'].setValue('\[python \{nuke.script_directory()\}]')\nnuke.root()\['first_frame'].setValue(gFFrame)\nnuke.root()\['last_frame'].setValue(gLFrame)\n\n# give message for the artist, for motivation\nmessages = \['All set! Happy compsiting','Good luck with your Nuke','Let\\'s get shots done!','This shot is fun']\nline = random.choice(messages)\nnuke.message(line)\n" +STARTLINE}
 addUserKnob {26 _1 l "" -STARTLINE T "click to set folder and save in proper folder and naming"}
 addUserKnob {26 ""}
 addUserKnob {68 Drive M {C D E F G}}
 Drive D
 addUserKnob {4 proj -STARTLINE M {"\$RECYCLE.BIN" bez film movie_1 "System Volume Information" "" ""}}
 proj movie_1
 addUserKnob {4 seq l sequence -STARTLINE M {chase run car establish gun_shot "" ""}}
 seq run
 addUserKnob {1 shot}
 shot test
 addUserKnob {16 ver l version}
 ver 10
 addUserKnob {3 FFrame l "Frame range start " t "start frame"}
 FFrame 1001
 addUserKnob {3 LFrame l end t "last frame" -STARTLINE}
 LFrame 1100
 addUserKnob {26 "" +STARTLINE}
 addUserKnob {26 preview l "preview    |    " T "test path here/shot_v010.nk"}
 addUserKnob {26 ""}
 addUserKnob {4 proj M {"\$RECYCLE.BIN" bez film movie_1 "System Volume Information" test}}
 proj movie_1
 addUserKnob {4 sequence M {car chase establish run}}
 sequence chase
}
 Output {
  inputs 0
  name Output1
  xpos 0
  ypos 300
 }
end_group
